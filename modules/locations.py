# coding=utf-8
"""
–í—Å–µ –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –∏–≥—Ä—ã
"""
import random
import time


from bot.data import WOODS, CAVE, SHORE
from sessions import CAVE_LEVEL, CAVE_CHANCE


class Location(object):
    """ –õ–æ–∫–∞—Ü–∏—è, –ª—é–±–æ–µ –º–µ—Å—Ç–æ –≤ –∏–≥—Ä–µ, –∫—É–¥–∞ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è """
    def __init__(self, console, command, instant, prob):
        """
        console: –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª–∏
        command: –ª—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è .emoji
        instant: —Ç—Ä–µ–±—É–µ—Ç –ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤—Ä–µ–º–µ–Ω–∏
        after: –≤—Ä–µ–º—è, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ—Ö–æ–¥ –≤ –ª–æ–∫–∞—Ü–∏—é –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω
        """
        self.console = console
        self.command = command
        self.instant = instant
        self.prob = prob
        self.after = 0

    def postpone(self):
        """ –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –ø–æ—Ö–æ–¥ –≤ –ª–æ–∫–∞—Ü–∏—é """
        seconds = random.random() * 1200 + 900
        self.after = time.time() + seconds
        return seconds / 60

    @property
    def travel(self):
        """ –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∏–¥–µ–º –∏–ª–∏ –Ω–µ –∏–¥–µ–º –≤ –ª–æ–∫–∞—Ü–∏—é """
        if random.random() < self.prob:
            return True
        return False

    @property
    def emoji(self):
        """ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ—Ö–æ–¥ –≤ –ª–æ–∫–∞—Ü–∏—é """
        return self.command

    def update(self, level, available):
        """ –ú–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ """
        pass


class Random(Location):
    """ –õ–æ–∫–∞—Ü–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ–¥–∏–º –ø–æ —Å–ª—É—á–∞–π–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ """
    @property
    def emoji(self):
        """ –û–¥–Ω–∞ –∏–∑ —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ """
        return random.choice(self.command)


class Adventures(Location):
    """ –õ–æ–∫–∞—Ü–∏—è –¥–ª—è –≤—Å–µ—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π """
    def __init__(self, console, command, instant, prob):
        super().__init__(console, command, instant, prob)
        self.level = False
        self.available = []

    @property
    def emoji(self):
        # –ü–æ–±–µ—Ä–µ–∂—å–µ –ø–µ—Ä–µ—Å—Ç–∞–ª–æ –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º
        # if SHORE in self.available:
        #     return SHORE

        if CAVE in self.available:
            if self.level >= CAVE_LEVEL and random.random() < CAVE_CHANCE:
                return CAVE

        if WOODS in self.available:
            return WOODS

        return "/inv"

    def update(self, level, available):
        """ –û–±–Ω–æ–≤–ª—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –æ—Ç –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞–≤–∏—Å–∏—Ç –≤—ã–±–æ—Ä –ª–æ–∫–∞—Ü–∏–∏ """
        self.level = level
        self.available = [c for c in self.command if c in available]


RANDOM_COMMANDS = [
    "/top",
    "/worldtop",
    "/hero",
    # "/report",
    # "/inv",
    # "/trades"
]

ADVENTURES = [
    WOODS,
    CAVE,
    SHORE,
    # CARAVANS,
]

LOCATIONS = [
    Location("–∑–∞–ø—Ä–æ—Å –≥–µ—Ä–æ—è", "üèÖ–ì–µ—Ä–æ–π", True, 0.7),
    Location("–≤–∏–∑–∏—Ç –≤ –∑–∞–º–æ–∫", "üè∞–ó–∞–º–æ–∫", True, 0.6),
    Adventures("–ø–æ—Ö–æ–¥", ADVENTURES, False, 1),
    Random("—Å–ª—É—á–∞–π–Ω—É—é –∫–æ–º–∞–Ω–¥—É", RANDOM_COMMANDS, True, 0.7),
    # (!) 'arena': Location("–ø–æ—Ö–æ–¥ –Ω–∞ –∞—Ä–µ–Ω—É", "(!)", False),
    # (!) 'build': Location("–ø–æ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–æ–π–∫—É", "/build_(!)", False),
]
